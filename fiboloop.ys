          .pos 0
main:     irmovq stack, %rsp
          #initialize %rdi to the number of
          #fibonacci numbers to compute
          irmovq $20, %rdi
          #initialize %rsi to the address
          #of where to store the numbers
          irmovq fibolst, %rsi
          call fibo
          halt
# fibo 
# Computes fibonacci numbers
# param: %rdi - contains a count of the 
#        number of fibonacci numbers to 
#        compute
# param: %rsi - contains the starting 
#        address in memory of where to
#        store the numbers
#
fibo:     rrmovq %rsi, %r12
          irmovq $1, %rdx
          irmovq $0, %rbx
          irmovq $8, %r8
          irmovq $-1, %r9

top:      andq %rdi, %rdi
          je done
          irmovq $0, %rcx
          addq %rdx, %rcx
          addq %rbx, %rcx
          rmmovq %rcx, (%r12)
          addq %r8, %r12
          addq %r9, %rdi
          rrmovq %rdx, %rbx
          rrmovq %rcx, %rdx
          jmp top
        
done:     ret
#
          .align 8
fibolst:  .quad 0 
          .pos 0x400 
stack:    
